#!/bin/bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# don't put duplicate lines or lines starting with space in the history.
export HISTCONTROL=ignoreboth:erasedups

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length
export HISTSIZE=-1
export HISTFILESIZE=-1
export HISTFILE=~/.bash_eternal_history

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

shopt -s globstar

## external
# git completion
if [ -f ~/dotfiles/lib/git-completion.bash ]; then
    source ~/dotfiles/lib/git-completion.bash
fi

# scm breeze
if [ -f ~/dotfiles/lib/scm_breeze/scm_breeze.sh ]; then
    source ~/dotfiles/lib/scm_breeze/scm_breeze.sh
fi

# ssh
if ! pgrep -u "$USER" ssh-agent >/dev/null; then
    ssh-agent >~/.ssh-agent-thing
fi
if [[ "$SSH_AGENT_PID" == "" ]]; then
    eval "$(<~/.ssh-agent-thing)"
fi

### alias ###
if [ -f ~/dotfiles/bash/aliases.sh ]; then
    source ~/dotfiles/bash/aliases.sh
fi

### environment variables ###
if [ -f ~/dotfiles/bash/env-vars.sh ]; then
    source ~/dotfiles/bash/env-vars.sh
fi

### functions ###
if [ -f ~/dotfiles/bash/functions.sh ]; then
    source ~/dotfiles/bash/functions.sh
fi

### keyboard shortcuts ###
if [ -f ~/dotfiles/bash/input.sh ]; then
    source ~/dotfiles/bash/input.sh
fi

if [ -f ~/dotfiles/lib/kubectl-completion.bash ]; then
    source ~/dotfiles/lib/kubectl-completion.bash
fi

# Setup fzf
if [[ ! "$PATH" == *$HOME/dotfiles/lib/fzf/bin* ]]; then
    export PATH="$PATH:$HOME/dotfiles/lib/fzf/bin"
fi

# fzf mark
if [ -f ~/dotfiles/lib/fzf-marks/fzf-marks.plugin.bash ]; then
    source ~/dotfiles/lib/fzf-marks/fzf-marks.plugin.bash
fi

if [ -f usr/share/bash-preexec/bash-preexec.sh ]; then
    source /usr/share/bash-preexec/bash-preexec.sh
fi

# eval "$(fnm env)"
# eval "$(pyenv init -)"
# eval "$(pyenv virtualenv-init -)"
# eval "$(dircolors -b ~/dotfiles/bash/dir_colors)"
eval "$(gt completion)"
eval "$(starship init bash)"
eval "$(atuin init bash --disable-up-arrow)"
source "$(npm root -g)/@mapbox/mbxcli/bin/mapbox.sh"
